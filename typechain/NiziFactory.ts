/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Nizi } from "./Nizi";

export class NiziFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Nizi> {
    return super.deploy(overrides || {}) as Promise<Nizi>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Nizi {
    return super.attach(address) as Nizi;
  }
  connect(signer: Signer): NiziFactory {
    return super.connect(signer) as NiziFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Nizi {
    return new Contract(address, _abi, signerOrProvider) as Nizi;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_content_id",
        type: "uint256",
      },
    ],
    name: "checkRight",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_parent_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_child_id",
        type: "uint256",
      },
    ],
    name: "deprive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_content_id",
        type: "uint256",
      },
    ],
    name: "getAuthor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
    ],
    name: "getContentsList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfContents",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "child_id",
        type: "uint256",
      },
    ],
    name: "getParent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_parent_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_child_id",
        type: "uint256",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalty",
        type: "uint256",
      },
    ],
    name: "registerOriginal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_parent_id",
        type: "uint256",
      },
    ],
    name: "registerSecondary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_content_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "royalty",
        type: "uint256",
      },
    ],
    name: "setRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610f1c806100246000396000f3fe6080604052600436106100915760003560e01c806383faec801161005957806383faec80146101a6578063933a6f0d146101e35780639e2b84881461020c578063a344a07214610249578063f52009111461027257610091565b8063062a655714610096578063414533de146100c65780635193e5fd1461010357806368c62645146101405780636e1ed7751461017d575b600080fd5b6100b060048036038101906100ab9190610b62565b61029d565b6040516100bd9190610d14565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e89190610b62565b6104fd565b6040516100fa9190610d14565b60405180910390f35b34801561010f57600080fd5b5061012a60048036038101906101259190610b62565b61051a565b6040516101379190610cd9565b60405180910390f35b34801561014c57600080fd5b5061016760048036038101906101629190610b62565b610569565b6040516101749190610d14565b60405180910390f35b34801561018957600080fd5b506101a4600480360381019061019f9190610b8b565b6106e7565b005b3480156101b257600080fd5b506101cd60048036038101906101c89190610b39565b6107a1565b6040516101da9190610cb7565b60405180910390f35b3480156101ef57600080fd5b5061020a60048036038101906102059190610b8b565b610952565b005b34801561021857600080fd5b50610233600480360381019061022e9190610b62565b6109d9565b6040516102409190610c9c565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b9190610b8b565b610a16565b005b34801561027e57600080fd5b50610287610b06565b6040516102949190610d14565b60405180910390f35b6000600360008381526020019081526020016000205434146102be57600080fd5b81600054101580156102d1575060008214155b6102da57600080fd5b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610353573d6000803e3d6000fd5b5060016000808282546103669190610d79565b9250508190555033600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008054815260200190815260200160002060006101000a81548160ff02191690831515021790555081600460008054815260200190815260200160002081905550600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104ec9190610d79565b925050819055506000549050919050565b600060046000838152602001908152602001600020549050919050565b600080600460008481526020019081526020016000205414156105405760019050610564565b6002600083815260200190815260200160002060009054906101000a900460ff1690505b919050565b6000600160008082825461057d9190610d79565b9250508190555033600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360008054815260200190815260200160002081905550600054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106d69190610d79565b925050819055506000549050919050565b8160046000838152602001908152602001600020541461070657600080fd5b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077157600080fd5b60016002600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60606000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205467ffffffffffffffff811115610824577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156108525781602001602082028036833780820191505090505b50905060005b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481101561094857600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002054828281518110610929577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061094090610e17565b915050610858565b5080915050919050565b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109bd57600080fd5b8060036000848152602001908152602001600020819055505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b81600460008381526020019081526020016000205414610a3557600080fd5b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acd90610cf4565b60405180910390fd5b60006002600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008054905090565b600081359050610b1e81610eb8565b92915050565b600081359050610b3381610ecf565b92915050565b600060208284031215610b4b57600080fd5b6000610b5984828501610b0f565b91505092915050565b600060208284031215610b7457600080fd5b6000610b8284828501610b24565b91505092915050565b60008060408385031215610b9e57600080fd5b6000610bac85828601610b24565b9250506020610bbd85828601610b24565b9150509250929050565b6000610bd38383610c7e565b60208301905092915050565b610be881610dcf565b82525050565b6000610bf982610d3f565b610c038185610d57565b9350610c0e83610d2f565b8060005b83811015610c3f578151610c268882610bc7565b9750610c3183610d4a565b925050600181019050610c12565b5085935050505092915050565b610c5581610de1565b82525050565b6000610c68601e83610d68565b9150610c7382610e8f565b602082019050919050565b610c8781610e0d565b82525050565b610c9681610e0d565b82525050565b6000602082019050610cb16000830184610bdf565b92915050565b60006020820190508181036000830152610cd18184610bee565b905092915050565b6000602082019050610cee6000830184610c4c565b92915050565b60006020820190508181036000830152610d0d81610c5b565b9050919050565b6000602082019050610d296000830184610c8d565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d8482610e0d565b9150610d8f83610e0d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dc457610dc3610e60565b5b828201905092915050565b6000610dda82610ded565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e2282610e0d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5557610e54610e60565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f796f7520617265206e6f7420746865206f726967696e616c206f776e65720000600082015250565b610ec181610dcf565b8114610ecc57600080fd5b50565b610ed881610e0d565b8114610ee357600080fd5b5056fea2646970667358221220a17c155c62c54aa25da9779043fa38fecb41f6497afc4998d36d3fed7832a57c64736f6c63430008010033";
